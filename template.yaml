apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: tomelin-template
  title: Tomelin SSR Template
  description: Create a website powered with Next.js
  tags:
    - recommended
    - react
    - temp
spec:
  owner: rafael.tomelin@pagonxt.com
  type: website
  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - owner
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: ArgoCD information
      required:
        - project_name
        - application_name
        - namespace
      properties:
        project_name:
          title: Project Name
          type: string
          description: Project name to create inside ArgoCD.
        application_name:
          title: Application Name
          type: string
          description: Application name to deploy in AKS and inside ArgoCD project.
        namespace:
          title: Namespace
          type: string
          description: Namespace for deploy the application in AKS (Azure Kubernetes).
    - title: Azure Resources
      properties:
        enabledDB:
          title: Enable Database
          description: Enable database in your application.
          type: boolean
          default: false
        enabledCache:
          title: Enable Cache
          description: Enable cache in your application.
          type: boolean
          default: false
        enabledQueue:
          title: Enable Message Queue
          description: Help others understand what this website is for.
          type: boolean
          default: false
        enabledAKV:
          title: Enable Vault
          description: Enable vault in your application.
          type: boolean
          default: false
        enabledStorage:
          title: Enable Storage
          description: Enable sorage in your application.
          type: boolean
          default: false
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          enabledDB: ${{ parameters.enabledDB }}
          project_name: ${{ parameters.project_name }}
          namespace: ${{ parameters.namespace }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}

    - id: fetch-docs
      name: Fetch Docs
      if: ${{ parameters.enabledDB }}
      action: fetch:plain
      input:
        targetPath: ./deploy/argocd
        url: https://github.com/backstage/community/blob/main/backstage-community-sessions
    
    - id: fetch-cache
      name: Fetch Cache
      if: ${{ parameters.enabledCache }}
      action: fetch:plain
      input:
        targetPath: ./deploy/kubernetes
        url: https://github.com/Tomelin/argocd-backstage/blob/main

    - id: fetch-Kube
      name: Fetch Kube
      if: ${{ parameters.enabledCache }}
      action: fetch:plain
      input:
        targetPath: ./deploy/kubernetes
        url: https://github.com/Tomelin/argocd-appProject/tree/main/kubernetes

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
